name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Cache docker image layers
        uses: actions/cache@v3
        with: 
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v3
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nextjs:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: verify
        run: echo ${{ steps.docker_build.outputs.digest }}
    outputs:
      image-digest: ${{ steps.docker_build.outputs.digest }}
  deploy:
    runs-on: self-hosted
    needs: docker
    steps: 
      - run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextjs@${{ needs.docker.outputs.image-digest }}
      - run: | 
          if [ "$( docker container inspect -f '{{.State.Status}}' containername )" == "running" ]; then
            docker stop containername
          fi
      - run: docker system prune -f
      - run: docker run --rm -d -p 3000:3000 --name containername ${{ secrets.DOCKERHUB_USERNAME }}/nextjs@${{ needs.docker.outputs.image-digest }}

  restart_nginx: 
    runs-on: self-hosted
    needs: deploy
    steps: 
      - run: sudo service nginx reload